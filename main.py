# main.py
import queue
import sounddevice as sd
import vosk
import json
import win32api
import win32con
import time
import threading

class VoiceController:
    def __init__(self):
        self.q = queue.Queue()
        self.model = vosk.Model("vosk-model-small-ru-0.22")
        self.grammar = '["–æ—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä—ã–±–∞–ª–∫–∞", "–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä—ã–±–∞–ª–∫–∞", "–ø–æ–π–º–∞—Ç—å", "–≥–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–∑–∞–∫–∏–Ω—É—Ç—å", "–æ—Ç–∫–ª—é—á–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"]'
        self.commands = ["–æ—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä—ã–±–∞–ª–∫–∞", "–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä—ã–±–∞–ª–∫–∞", "–ø–æ–π–º–∞—Ç—å", "–≥–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–∑–∞–∫–∏–Ω—É—Ç—å", "–æ—Ç–∫–ª—é—á–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"]

        self.voice_mode = False
        self.auto_fishing = False

        self.thread = threading.Thread(target=self._recognize_loop, daemon=True)

    def left_click(self):
        win32api.mouse_event(win32con.MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0)
        time.sleep(0.1)
        win32api.mouse_event(win32con.MOUSEEVENTF_LEFTUP, 0, 0, 0, 0)
        time.sleep(0.1)

    def _callback(self, indata, frames, time_, status):
        if status:
            print(status)
        self.q.put(bytes(indata))

    def start(self):
        print("üé§ –ó–∞–ø—É—Å–∫ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
        self.thread.start()

    def is_auto_fishing_enabled(self):
        return self.auto_fishing

    def _recognize_loop(self):
        with sd.RawInputStream(
            samplerate=16000,
            blocksize=548,
            dtype='int16',
            channels=1,
            callback=self._callback
        ):
            print("üéô –ì–æ—Ç–æ–≤ –∫ –ø—Ä–∏—ë–º—É –∫–æ–º–∞–Ω–¥...")
            rec = vosk.KaldiRecognizer(self.model, 16000, self.grammar)

            while True:
                data = self.q.get()
                if rec.AcceptWaveform(data):
                    result = json.loads(rec.Result())
                    text = result.get("text", "").lower()
                    if text:
                        print(f"üó£ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: {text}")
                        for word in self.commands:
                            if word in text:
                                if word in ["–ø–æ–π–º–∞—Ç—å", "–∑–∞–∫–∏–Ω—É—Ç—å"]:
                                    self.left_click()
                                elif word == "–≥–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ":
                                    print("üó£ –í–∫–ª—é—á–∞—é –≥–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
                                    self.voice_mode = True
                                elif word == "–æ—Ç–∫–ª—é—á–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ":
                                    self.voice_mode = False
                                    print("üó£ –û—Ç–∫–ª—é—á–∞—é –≥–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
                                elif word == "–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä—ã–±–∞–ª–∫–∞":
                                    self.auto_fishing = True
                                    print("üó£ –í–∫–ª—é—á–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä—ã–±–∞–ª–∫—É")
                                elif word == "–æ—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä—ã–±–∞–ª–∫–∞":
                                    self.auto_fishing = False
                                    print("üó£ –û—Ç–∫—é—á–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä—ã–±–∞–ª–∫—É")
                                break
